#!/bin/bash
#-------------------------------------------------------------------------------
# Nek5000 config file
#-------------------------------------------------------------------------------

FILE_PATH=$(readlink -f "$0")
BIN_DIR=$(dirname "$FILE_PATH")
SOURCE_ROOT=$(dirname "$BIN_DIR")
EXAMPLES_DIR=$(dirname "$SOURCE_ROOT")
ASCENT_TRAME_ROOT=$(dirname "$EXAMPLES_DIR")

# remove ascent build directory
if [ -d "$SOURCE_ROOT/3rd_party/nek_ascent/build" ]; then
    echo "Removing directory: $SOURCE_ROOT/3rd_party/nek_ascent/build"
    rm -rf "$SOURCE_ROOT/3rd_party/nek_ascent/build"
fi

# customize this file to load any necessary modules
source $SOURCE_ROOT/sourceme

# Fortran/C compiler
FC="ftn"
CC="cc"
CXX="CC"

# pre-processor list (set to "?" to get a list of available symbols)
PPLIST="LPM"

# Ascent cmake directory
ASCENT=1
ASCENT_DIR=$ASCENT_TRAME_ROOT/scripts/build/ascent/scripts/build_ascent/install/ascent-checkout/lib/cmake/ascent

# optional compiler flags
FFLAGS="-march=native -std=legacy -mcmodel=large"
CFLAGS="-march=native"

###############################################################################
# DONT'T TOUCH WHAT FOLLOWS !!!
###############################################################################
set -e

# assign version tag
mver=17.0.4

# set defaults
: ${SOURCE_ROOT:="$SOURCE_ROOT"}
: ${FC:="mpif77"}
: ${CC:="mpicc"}
: ${MPI:=1}
: ${PROFILING:=1}
: ${VISIT:=0}
: ${ASCENT:=0}
: ${PPLIST:=""}

# overwrite source path with optional 2nd argument
if [ -d $2 ] && [ $# -eq 2 ]; then
  SOURCE_ROOT="$2"
  echo "change source code directory to: ", $SOURCE_ROOT
fi

# create makefile
source $SOURCE_ROOT/core/makenek.inc

# compile 3rd_party code
make_3rd_party 2>&1 | tee -a compiler.out

# compile nek
make -j6 -f makefile 2>&1 | tee -a compiler.out

# create a better default session file inside $1
if [ -e "SESSION.NAME" ]; then
  rm -f "SESSION.NAME"
fi
cat << EOF > SESSION.NAME
$1
$PWD
EOF

# Create run script
if [ -e "run.sh" ]; then
  rm -f "run.sh"
fi
cat << EOF > run.sh
#!/bin/bash
source "$SOURCE_ROOT/sourceme"

# Set Python and Ascent Paths
PYTHON_SITE_PKG="$ASCENT_TRAME_ROOT/scripts/build/python-venv/lib/python3.11/site-packages"
ASCENT_DIR="$ASCENT_TRAME_ROOT/scripts/build/ascent/scripts/build_ascent/install"
export PYTHONPATH="\$PYTHONPATH:\$PYTHON_SITE_PKG:\$ASCENT_DIR/ascent-checkout/python-modules/:\$ASCENT_DIR/conduit-v0.9.2/python-modules/"

# Clean up previous run
./clean.sh

# Start Trame Server in the Background
nohup python trame/trame_app.py --host 0.0.0.0 --port 8888 --server --timeout 0 > trame.log 2>&1 &
TRAME_PID=$!
trap "kill $TRAME_PID" EXIT

echo "---------------------------------------------------------------------------------"
echo "To access the Trame server, copy and run this command in a local terminal:"
echo "ssh -v -N -L 8888:\$(hostname):8888 $USER@crux.alcf.anl.gov"
echo "---------------------------------------------------------------------------------"

# Pause for SSH command copying
sleep 5

NODES=\`wc -l < \$PBS_NODEFILE\`
RANKS_PER_NODE=32
TOTAL_RANKS=\$(( \$NODES * \$RANKS_PER_NODE ))
mpiexec -n \$TOTAL_RANKS -ppn \$RANKS_PER_NODE ./nek5000

EOF
chmod +x run.sh

exit 0
